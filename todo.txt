Project Init Procedure:

    npm install
    npm install grunt-contribe-coffee --save-dev
    npm install grunt-newer --save-dev
    npm install load-grunt-tasks --save-dev
    npm install time-grunt --save-dev

    # make sublime coffeelint plugin work
    coffeelint --makeconfig > coffeelint.json
        then change idention to 4 space
        change max_line_length to 140

    npm install jasmine-node --save-dev
    npm install grunt-jasmine-node --save-dev
    npm install winston --save # logger, deprecated, winston logger cant logger `Error` object
    npm install bunyan --save #logger

    npm install mkdirp --save # util help create dir with parent path

    npm install express --save #express framework
    npm install underscore --save #underscore

    grunt watch #start a watch process

    npm install -g node-inspector # node js debug tool
    npm install -g nodemon # nodejs app start tool

    npm install -g bower
    ## npm
        [npm commands doc] (https://www.npmjs.org/doc/)

    ## express

        ### express fast creation
            nmp install -g express
            npm install -g express-generator
            express [options] <project_name> #create an express project

        ### express body parser installation
            npm install body-parser --save
            npm install cookie-parser --save

            npm install ejs --save #install ejs template engine

    ## mongodb
        ### readings
            [mongodb gui: it appears donesnt work on windows xp](http://robomongo.org/)

    ## mongoose

        ### examples

            #### create a reference
                var mongoose = require('mongoose');

                var PostSchema = new mongoose.Schema({
                  title: String,
                  link: String,
                  upvotes: {type: Number, default: 0},
                  comments: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Comment' }]
                });

                mongoose.model('Post', PostSchema);

                var Post = mongoose.model('Post'); //get a reference of a model


    ## curl tools
        ### readings
            [curl tutorial](http://www.ruanyifeng.com/blog/2011/09/curl.html)

        ### cheat sheet
            //For posting data:
            curl --data "param1=value1&param2=value2" http://hostname/resource

            //For file upload:
            curl --form "fileupload=@filename.txt" http://hostname/resource

            //RESTful HTTP Post:
            curl -X POST -d @filename http://hostname/resource


# readings
    ## express
        [express next funciton](http://stackoverflow.com/questions/13133071/express-next-function-what-is-it-really-for)
        [mean stack tutorial] (https://thinkster.io/angulartutorial/mean-stack-tutorial/)
        [upgrading from 3.0 to 4.0] (http://scotch.io/bar-talk/expressjs-4-0-new-features-and-upgrading-from-3-0)
        [express4 routes tutorial] (http://scotch.io/tutorials/javascript/learn-to-use-the-new-router-in-expressjs-4)
        [ejs template engine tutorial](http://scotch.io/tutorials/javascript/use-ejs-to-template-your-node-application)
        [express-how-to-pass-app-instance-to-routes-from-a-different-file](http://stackoverflow.com/questions/10090414/express-how-to-pass-app-instance-to-routes-from-a-different-file)
        [深入Node.js的模块机制](http://www.infoq.com/cn/articles/nodejs-module-mechanism)
        [node js circular dependencies](http://selfcontained.us/2012/05/08/node-js-circular-dependencies/)
    ## mongodb
        [mongodb nodejs driver](http://mongodb.github.io/node-mongodb-native/1.4/driver-articles/mongoclient.html)
        [mongodb tutorial](http://www.tutorialspoint.com/mongodb/)
        [mongoose api document] (http://mongoosejs.com/docs/api.html#model_Model.update)
        [mongoose schema] (http://mongoosejs.com/docs/guide.html#indexes)

    ## nodejs
        [winston logger package](http://tostring.it/2014/06/23/advanced-logging-with-nodejs/)
        [bunyan logger package](https://github.com/trentm/node-bunyan)
        [compare bunyan and winston logger](http://strongloop.com/strongblog/compare-node-js-logging-winston-bunyan/)
        [request module - nodejs send http request](https://www.npmjs.com/package/request)
        [nodejs routes unit test](http://javascriptplayground.com/blog/2014/07/testing-express-routes/)
            这个方法倒是可以来用作单元测试, 总感觉缺少些原来的简洁性, 当然最好的办法就是end to end 的test
        [面向Node.js新手的7个技巧](http://dev.oupeng.com/articles/7-tips-for-a-nodejs-padawan)
        [npm dependencies instructions](https://docs.npmjs.com/files/package.json)
        [bower 介绍](http://blog.javachen.com/2014/05/10/bower-intro/)

    ## angularjs
        [angularjs api doc](http://www.ngnice.com/docs/api)
        [angularjs ui-router](http://joelhooks.com/blog/2013/07/22/the-basics-of-using-ui-router-with-angularjs/)

    ## others
        [server side event] (http://www.html5rocks.com/en/tutorials/eventsource/basics/)
        [socketio chat demo](http://socket.io/get-started/chat/)
        [Travis CI, 项目持续构建]
            http://www.cnblogs.com/whitewolf/archive/2013/04/14/3019838.html
            http://www.cnblogs.com/huang0925/archive/2013/05/30/3108370.html

# develop env
    start mongo
        mongod --config /usr/local/etc/mongod.conf

    nodemon
        npm install -g nodemon
        nodemon <your app js>

    node-inspector
        npm install -g node-inspector
        node-debug <your app js>


# TODOS
    DONE
        爬虫的荤素配的 bid 需要加上
        express router 的 unit test
        最终的下单接口: 忽略, 没必要
        在最终下单的时候,看看有没有json接口将订单信息拿到比对下再最终提交: 忽略, 没必要
        前端bid对应的校验加上
        整理上传github
        nodejs 的登录拦截器
        测试angularjs对$http请求的拦截
        菜单页面现在有问题, 不知道是否是切换angularjs版本造成的
        configure a express interceptor
        angularjs的登录拦截器
        设置登录 session 时常
        界面上加入退出, 登录
        启动时候的用户状态清空
        下订单的日志记录
        add editor config 配置
        用q.js 重构部分代码, 忽略, q 和 mongoose 一起用的时候, 在promise级联(channing)返回mongoose save的promise后得到的结果是一个数组
        add bower, 忽略, 没必要.
            1. 项目本身并不复杂, 不需要过多依赖
            2. bower下载的信息过多, 没有必要
            3. 由于当前的工作流不完善, bower下载下来的依赖需要自己添加到html中,并且会多少污染发布目录
        config jshint



    PENDING
        统一的错误拦截
        删除订单 http://fuhua.xiaozufan.com/Index/delorder/id/MzM3OTkwMw==?_=1421728799703

